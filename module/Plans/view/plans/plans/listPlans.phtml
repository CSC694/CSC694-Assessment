<?php

$title = 'Assessment Plan View List';
$this->headTitle($title);
?>	
	
<div class="container">
    <center><h3>Assessment Plans-VIEW List</h3></center>
    <p></p>  
    <div class="row">
	<!-- Build the left hand side of the page -->                                 				
	<?php echo $this->partial('plans/plans/plansLeftSidePartial.phtml', array()); ?>

	<!--column 2 Right side of the acreen-->
	<p></p>
	<div class="col-md-6">
	    <?php
		// identify the action to determine the next page to navigate to view or modify
		// dynamically set the label
		$nextPage="modifyplan";
		$label="Select a plan to modify for: ";
		if ($action == "View"){
		    $nextPage="viewonlyplan";
		    $label="Select a plan to view for: ";
		}
		
		// create a label if no plans exist for the selection
		if (sizeof($plans) == 0) {
		    $label="There are no plans for: ";
		}
	    ?>
			
	    <!-- create a header line -->			
	    <?php echo $this->partial('plans/plans/displayAllPrograms.phtml', array('programs' => $programs,
									      'label' => $label,
									      'unit' => $unit,
									      'year' => $year,
									      ))
	    ?>
	     <div class="input-group">
		<div class="panel-group" id="accordion">
		    <div class="panel panel-success">
				    
			<?php					    			
			    // Loop through all the returned plans
			    $planCount = 0;
			    if (!empty($plans)) {
				foreach ($plans as $plan) :
				    $planCount++;
			?>
				    <!-- Create the plan row -->
				    <div class="panel-heading">
					<h4 class="title">					
					    <a data-toggle="collapse" data-parent="#accordion"
						   href="#collapse<?php echo $planCount; ?>">
						    Plan # <?php echo $planCount; ?> &nbsp; </a>
					
					<!-- Create a select button for each row -->
					<a class="btn btn-primary btn-xs" href="<?php echo $this->url('plans',
												    array('action'=>$nextPage,
													  'id' => $plan['planId'],
												  ));
									        ?>"><?php echo $this->translate ('Select') ?> &raquo;</a>&nbsp;
					
					</h4>
				    </div>

			    <!-- Create the outcome data for each row -->
			    <div id="collapse<?php echo $planCount; ?>" class="pane<?php echo $planCount; ?>-collapse collapse">
				<div class="panel-body">
				    <div class="control-group">
					<div class="controls">
					    <table class="table">							  
						<?php
						    // loop through all the outcomes
						    $outcomeCount = 0;
						    if (!empty($outcomes)) {
							foreach ($outcomes as $outcome) :

							    //Check to see if the outcome exists for the plan id
							    if($plan['planId'] == $outcome->getPlanId()) {
								$outcomeCount++;
						?>
								<!-- create a row in the table -->
								<tr>
								    <th><?php echo $outcomeCount; ?>.</th> <td> <?php echo $outcome->getOutcomeText() ?></td>
								    <input type="hidden" name="outcomeId<?php echo $outcomeCount; ?>" value="<?php echo $outcome->getOutcomeId() ?>">
								</tr>
						<?php
							    }
							endforeach;
						    }
						?>						
					    </table>
					</div>
				    </div>
				</div>
			    </div>
		<?php
				endforeach;
			    }
		?>
		    </div>
		</div>
	    </div>
	</div>

    </div>
</div>

 
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script src="../js/bootstrap.min.js"></script>
<script src="../js/bootstrap-rta.min.js"></script>
<script src="../js/bootstrap-select.js"></script>

<script>

// load actions based on user privileges
$(document).ready(function() {
     $.rta(); // load rta features - simplest implementation
   
   var actions = <?php print json_encode($useractions); ?>;
   for (var i = 0; i < actions.length; i++){
      $('#action-menu').append('<option>' + actions[i] + '</option>');
   }
   
   // call code to initialize the selectpicker
   // this must come after the options are initialized
   $('.selectpicker').selectpicker();
});

// update unit/department options based on actions
$(document).on('change', '#action-menu', function () {
   $action = $('#action-menu option:selected').val();
   // clear selectorlist before adding unit/department options
   var oldSelections = $('#unit-menu option');
   for (var i = 0; i < oldSelections.length; i++){
      oldSelections.remove();
   }
   // data-hidden="true" shows title on button
   $('#unit-menu').append('<option  data-hidden="true"></option>');
   $('#unit-menu').selectpicker('refresh');
   
   // create url for redirect
   var urlform = "<?php echo $this->url('plans', array(
                                    'controller'=>'plans',
                                    'action'=>'getUnits')); ?>";
   urlform = urlform + '/' + $action;
     
   // asynchronous ajax code to populate unit/department selector
   $.ajax({
      url: urlform,
      type: "GET",
      dataType: "json",
      error : function(xhr, status, error) {
         console.log("ERROR: ", xhr, xhr.status, xhr.getAllResponseHeaders());
      },
      success: function(unitsJson){
         for (var i = 0; i < unitsJson.length; i++){
            $('#unit-menu').append('<option>' + unitsJson[i].id + '</option>');
         }
         $('#unit-menu').selectpicker('refresh');
      },
   });
});

// update program options based on unit/department
$(document).on('change', '#unit-menu', function () {
   $unit = $('#unit-menu option:selected').val();
   // clear selectorlist before adding program/degree options
   var oldSelections = $('#prog-menu option');
   for (var i = 0; i < oldSelections.length; i++){
      oldSelections.remove();
   }
   $('#prog-menu').selectpicker('refresh');
   
   // create url for redirect
   var urlform = "<?php echo $this->url('plans', array(
                                    'controller'=>'plans',
                                    'action'=>'getPrograms')); ?>";
   urlform = urlform + '/' + $unit;
   
   // asynchronous ajax code to populate program/degree selector
   $.ajax({
      url: urlform,
      type: "GET",
      dataType: "json",
      error : function(xhr, status, error) {
         console.log("ERROR: ", xhr, xhr.status, xhr.getAllResponseHeaders());
      },
      success: function(programsJson){
         for (var i = 0; i < programsJson.length; i++){
            $('#prog-menu').append('<option>' + programsJson[i].name + '</option>');
         }
         $('#prog-menu').selectpicker('refresh');
      },
   });
});

// load all the year options after the unit/department & unit/department are selected
$(document).on('change', '#prog-menu', function () {
   // clear selectorlist before adding all the years
   var oldSelections = $('#year-menu option');
   for (var i = 0; i < oldSelections.length; i++){
      oldSelections.remove();
   }
   
   // data-hidden="true" shows title on button
   $('#year-menu').append('<option  data-hidden="true"></option>');
   $('#year-menu').selectpicker('refresh');
   
   // create url for redirect
   var urlform = "<?php echo $this->url('plans', array(
                                    'controller'=>'plans',
                                    'action'=>'getYears')); ?>";
   urlform = urlform;
   
   // asynchronous ajax code to populate program/degree selector
   $.ajax({
      url: urlform,
      type: "GET",
      dataType: "json",
      error : function(xhr, status, error) {
         console.log("ERROR: ", xhr, xhr.status, xhr.getAllResponseHeaders());
      },
      success: function(programsJson){
         for (var i = 0; i < programsJson.length; i++){
            $('#year-menu').append('<option>' + programsJson[i].year + '</option>');
         }
         $('#year-menu').selectpicker('refresh');
      },
   });
});
</script>		